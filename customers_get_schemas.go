// Code generated by schema-generate. DO NOT EDIT.

package economic

// Attention The customer's person of attention.
type Attention struct {

	// The unique identifier of the customer employee.
	CustomerContactNumber int `json:"customerContactNumber,omitempty"`

	// A unique link reference to the customer employee item.
	Self string `json:"self,omitempty"`
}

// Customer
type Customer struct {

	// Address for the customer including street and number.
	Address string `json:"address,omitempty"`

	// The customer's person of attention.
	Attention *Attention `json:"attention,omitempty"`

	// The outstanding amount for this customer.
	Balance float64 `json:"balance,omitempty"`

	// Boolean indication of whether the customer is barred from invoicing.
	Barred bool `json:"barred,omitempty"`

	// The customer's city.
	City string `json:"city,omitempty"`

	// A unique link reference to the customer contacts items.
	Contacts string `json:"contacts,omitempty"`

	// Corporate Identification Number. For example CVR in Denmark.
	CorporateIdentificationNumber string `json:"corporateIdentificationNumber,omitempty"`

	// The customer's country.
	Country string `json:"country,omitempty"`

	// A maximum credit for this customer. Once the maximum is reached or passed in connection with an order/quotation/invoice for this customer you see a warning in e-conomic.
	CreditLimit float64 `json:"creditLimit,omitempty"`

	// Default payment currency.
	Currency string `json:"currency,omitempty"`

	// Reference to main contact employee at customer.
	CustomerContact *CustomerContact `json:"customerContact,omitempty"`

	// Reference to the customer group this customer is attached to.
	CustomerGroup *CustomerGroup `json:"customerGroup,omitempty"`

	// The customer number is a positive unique numerical identifier with a maximum of 9 digits.
	CustomerNumber int `json:"customerNumber,omitempty"`

	// Customers default delivery location.
	DefaultDeliveryLocation *DefaultDeliveryLocation `json:"defaultDeliveryLocation,omitempty"`

	// A unique link reference to the customer delivery locations items.
	DeliveryLocations string `json:"deliveryLocations,omitempty"`

	// European Article Number. EAN is used for invoicing the Danish public sector.
	Ean string `json:"ean,omitempty"`

	// Customer e-mail address where e-conomic invoices should be emailed. Note: you can specify multiple email addresses in this field, separated by a space. If you need to send a copy of the invoice or write to other e-mail addresses, you can also create one or more customer contacts.
	Email    string    `json:"email,omitempty"`
	Invoices *Invoices `json:"invoices,omitempty"`

	// The date this customer was last updated. The date is formatted according to ISO-8601.
	LastUpdated string `json:"lastUpdated,omitempty"`

	// Layout to be applied for invoices and other documents for this customer.
	Layout *Layout `json:"layout,omitempty"`

	// The customer's mobile phone number.
	MobilePhone string `json:"mobilePhone,omitempty"`

	// The customer name.
	Name string `json:"name,omitempty"`

	// Extension of corporate identification number (CVR). Identifying separate production unit (p-nummer).
	PNumber string `json:"pNumber,omitempty"`

	// The default payment terms for the customer.
	PaymentTerms *PaymentTerms `json:"paymentTerms,omitempty"`

	// The public entry number is used for electronic invoicing, to define the account invoices will be registered on at the customer.
	PublicEntryNumber string `json:"publicEntryNumber,omitempty"`

	// Reference to the employee responsible for contact with this customer.
	SalesPerson *SalesPerson `json:"salesPerson,omitempty"`

	// The unique self reference of the customer resource.
	Self string `json:"self,omitempty"`

	// The customer's telephone and/or fax number.
	TelephoneAndFaxNumber string     `json:"telephoneAndFaxNumber,omitempty"`
	Templates             *Templates `json:"templates,omitempty"`
	Totals                *Totals    `json:"totals,omitempty"`

	// The customer's value added tax identification number. This field is only available to agreements in Sweden, UK, Germany, Poland and Finland. Not to be mistaken for the danish CVR number, which is defined on the corporateIdentificationNumber property.
	VatNumber string `json:"vatNumber,omitempty"`

	// Indicates in which VAT-zone the customer is located (e.g.: domestically, in Europe or elsewhere abroad).
	VatZone *VatZone `json:"vatZone,omitempty"`

	// Customer website, if applicable.
	Website string `json:"website,omitempty"`

	// The customer's postcode.
	Zip string `json:"zip,omitempty"`
}

// CustomerCollectionGETSchema A schema for fetching a collection of customer, aka. Debtor.
type CustomerCollectionGETSchema struct {

	// A collection of customers.
	Collection []*Customer `json:"collection,omitempty"`

	// Information about possible actions, endpoints and resource paths related to the endpoint.
	MetaData *MetaData `json:"metaData,omitempty"`

	// Information about the pagination.
	Pagination *Pagination `json:"pagination,omitempty"`

	// The unique self reference of the customer collection resource.
	Self string `json:"self,omitempty"`
}

// CustomerContact Reference to main contact employee at customer.
type CustomerContact struct {

	// The unique identifier of the customer contact.
	CustomerContactNumber int `json:"customerContactNumber,omitempty"`

	// A unique link reference to the customer contact item.
	Self string `json:"self,omitempty"`
}

// DefaultDeliveryLocation Customers default delivery location.
type DefaultDeliveryLocation struct {

	// The unique identifier of the delivery location.
	DeliveryLocationNumber int `json:"deliveryLocationNumber,omitempty"`

	// A unique link reference to the delivery location.
	Self string `json:"self,omitempty"`
}

// Invoices
type Invoices struct {

	// The unique reference to the booked invoices for this customer.
	Booked string `json:"booked,omitempty"`

	// The unique reference to the draft invoices for this customer.
	Drafts string `json:"drafts,omitempty"`

	// A unique link reference to the invoices resource for this customer.
	Self string `json:"self,omitempty"`
}

// MetaData Information about possible actions, endpoints and resource paths related to the endpoint.
type MetaData struct {
}

// Templates
type Templates struct {

	// The unique reference to the invoice template.
	Invoice string `json:"invoice,omitempty"`

	// The unique reference to the invoiceLine template.
	InvoiceLine string `json:"invoiceLine,omitempty"`

	// A unique link reference to the templates resource.
	Self string `json:"self,omitempty"`
}

// Totals
type Totals struct {

	// The unique reference to the booked invoice totals for this customer.
	Booked string `json:"booked,omitempty"`

	// The unique reference to the draft invoice totals for this customer.
	Drafts string `json:"drafts,omitempty"`

	// A unique link reference to the totals resource for this customer.
	Self string `json:"self,omitempty"`
}
