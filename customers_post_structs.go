// Code generated by schema-generate. DO NOT EDIT.

package economic

// CustomerGroup In order to set up a new customer, it is necessary to specify a customer group. It is useful to group a company’s customers (e.g., ‘domestic’ and ‘foreign’ customers) and to link the group members to the same account when generating reports.
type CustomerGroup struct {

	// The unique identifier of the customer group.
	CustomerGroupNumber int `json:"customerGroupNumber,omitempty"`

	// A unique link reference to the customer group item.
	Self string `json:"self,omitempty"`
}

// CustomerPOSTSchema A schema for creating a customer, aka. Debtor.
type CustomerPOSTSchema struct {

	// Address for the customer including street and number.
	Address string `json:"address,omitempty"`

	// The outstanding amount for this customer.
	Balance float64 `json:"balance,omitempty"`

	// Boolean indication of whether the customer is barred from invoicing.
	Barred bool `json:"barred,omitempty"`

	// The customer's city.
	City string `json:"city,omitempty"`

	// Corporate Identification Number. For example CVR in Denmark.
	CorporateIdentificationNumber string `json:"corporateIdentificationNumber,omitempty"`

	// The customer's country.
	Country string `json:"country,omitempty"`

	// A maximum credit for this customer. Once the maximum is reached or passed in connection with an order/quotation/invoice for this customer you see a warning in e-conomic.
	CreditLimit float64 `json:"creditLimit,omitempty"`

	// Default payment currency.
	Currency string `json:"currency,omitempty"`

	// In order to set up a new customer, it is necessary to specify a customer group. It is useful to group a company’s customers (e.g., ‘domestic’ and ‘foreign’ customers) and to link the group members to the same account when generating reports.
	CustomerGroup *CustomerGroup `json:"customerGroup,omitempty"`

	// The customer number is a positive unique numerical identifier with a maximum of 9 digits. If no customer number is specified a number will be supplied by the system.
	CustomerNumber int `json:"customerNumber,omitempty"`

	// European Article Number. EAN is used for invoicing the Danish public sector.
	Ean string `json:"ean,omitempty"`

	// Customer e-mail address where e-conomic invoices should be emailed. Note: you can specify multiple email addresses in this field, separated by a space. If you need to send a copy of the invoice or write to other e-mail addresses, you can also create one or more customer contacts.
	Email string `json:"email,omitempty"`

	// Layout to be applied for invoices and other documents for this customer.
	Layout *Layout `json:"layout,omitempty"`

	// The customer's mobile phone number.
	MobilePhone string `json:"mobilePhone,omitempty"`

	// The customer name.
	Name string `json:"name,omitempty"`

	// Extension of corporate identification number (CVR). Identifying separate production unit (p-nummer).
	PNumber string `json:"pNumber,omitempty"`

	// The default payment terms for the customer.
	PaymentTerms *PaymentTerms `json:"paymentTerms,omitempty"`
	PriceGroup   interface{}   `json:"priceGroup,omitempty"`

	// The public entry number is used for electronic invoicing, to define the account invoices will be registered on at the customer.
	PublicEntryNumber string `json:"publicEntryNumber,omitempty"`

	// Reference to the employee responsible for contact with this customer.
	SalesPerson *SalesPerson `json:"salesPerson,omitempty"`

	// The customer's telephone and/or fax number.
	TelephoneAndFaxNumber string `json:"telephoneAndFaxNumber,omitempty"`

	// The customer's value added tax identification number. This field is only available to agreements in Sweden, UK, Germany, Poland and Finland. Not to be mistaken for the danish CVR number, which is defined on the corporateIdentificationNumber property.
	VatNumber string `json:"vatNumber,omitempty"`

	// Indicates in which VAT-zone the customer is located (e.g.: domestically, in Europe or elsewhere abroad).
	VatZone *VatZone `json:"vatZone,omitempty"`

	// Customer website, if applicable.
	Website string `json:"website,omitempty"`

	// The customer's postcode.
	Zip string `json:"zip,omitempty"`
}

// Layout Layout to be applied for invoices and other documents for this customer.
type Layout struct {

	// The unique identifier of the layout.
	LayoutNumber int `json:"layoutNumber,omitempty"`

	// A unique link reference to the layout item.
	Self string `json:"self,omitempty"`
}

// PaymentTerms The default payment terms for the customer.
type PaymentTerms struct {

	// The unique identifier of the payment terms.
	PaymentTermsNumber int `json:"paymentTermsNumber,omitempty"`

	// A unique link reference to the payment terms item.
	Self string `json:"self,omitempty"`
}

// SalesPerson Reference to the employee responsible for contact with this customer.
type SalesPerson struct {

	// The unique identifier of the employee.
	EmployeeNumber int `json:"employeeNumber,omitempty"`

	// A unique link reference to the employee resource.
	Self string `json:"self,omitempty"`
}

// VatZone Indicates in which VAT-zone the customer is located (e.g.: domestically, in Europe or elsewhere abroad).
type VatZone struct {

	// A unique link reference to the VAT-zone item.
	Self string `json:"self,omitempty"`

	// The unique identifier of the VAT-zone.
	VatZoneNumber int `json:"vatZoneNumber,omitempty"`
}
